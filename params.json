{
  "name": "Android.notification",
  "tagline": "",
  "body": "###本文展示一个功能类似闹钟的Demo，说明Notification的使用。\r\n本文用到的常量以及字符串如下：\r\n常量：\r\n``` \r\npublic final class CommonConstants {\r\n\r\n    private CommonConstants() {\r\n        // don't allow the class to be instantiated\r\n    }\r\n    public static final int DEFAULT_TIMER_DURATION = 3 * 1000;\r\n    public static final String ACTION_SNOOZE = \"com.example.administrator.notificationdemo.ACTION_SNOOZE\";\r\n    public static final String ACTION_DISMISS = \"com.example.administrator.notificationdemo.ACTION_DISMISS\";\r\n    public static final String ACTION_NOTIFICATION = \"com.example.administrator.notificationdemo.ACTION_PING\";\r\n    public static final String EXTRA_MESSAGE= \"com.example.administrator.notificationdemo.EXTRA_MESSAGE\";\r\n    public static final String EXTRA_TIMER = \"com.example.administrator.notificationdemo.EXTRA_TIMER\";\r\n    public static final int NOTIFICATION_ID = 001;\r\n    public static final String DEBUG_TAG = \"Notification\";\r\n}\r\n```\r\n先来看看布局文件：\r\n``` \r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\" >\r\n\r\n    <TextView\r\n        android:id=\"@+id/seconds_view\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignParentTop=\"true\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:layout_marginTop=\"32dp\"\r\n        android:textAppearance=\"?android:attr/textAppearanceMedium\"\r\n        android:text=\"@string/set_second_text\" />\r\n\r\n    <EditText\r\n        android:id=\"@+id/edit_seconds\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@+id/seconds_view\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:layout_marginTop=\"15dp\"\r\n        android:ems=\"10\"\r\n        android:text=\"@string/seconds_default\"\r\n        android:inputType=\"numberSigned\">\r\n\r\n        <requestFocus />\r\n    </EditText>\r\n\r\n    <TextView\r\n        android:id=\"@+id/reminder_view\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@+id/edit_seconds\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:layout_marginTop=\"40dp\"\r\n        android:textAppearance=\"?android:attr/textAppearanceMedium\"\r\n        android:text=\"@string/reminder_label\" />\r\n\r\n    <EditText\r\n        android:id=\"@+id/edit_reminder\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignLeft=\"@+id/edit_seconds\"\r\n        android:layout_below=\"@+id/reminder_view\"\r\n        android:layout_marginTop=\"15dp\"\r\n        android:ems=\"10\"\r\n        android:text=\"@string/reminder_text\"\r\n        android:inputType=\"textMultiLine\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/ping_button\"\r\n        style=\"?android:attr/buttonStyleSmall\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@+id/edit_reminder\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:layout_marginTop=\"25dp\"\r\n        android:textAppearance=\"?android:attr/textAppearanceMedium\"\r\n        android:onClick=\"onPingClick\"\r\n        android:text=\"@string/set_reminder\" />\r\n\r\n</RelativeLayout>\r\n```\r\n另外还有一个点击了通知栏后显示的Activity的布局文件：\r\n``` \r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\" >\r\n\r\n    <TextView\r\n        android:id=\"@+id/result_message\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:layout_centerInParent=\"true\"\r\n        android:textAppearance=\"?android:attr/textAppearanceMedium\" />\r\n\r\n    <RelativeLayout\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@+id/result_message\"\r\n        android:layout_centerInParent=\"true\" >\r\n\r\n      <Button\r\n          android:id=\"@+id/dismiss_button\"\r\n          android:layout_width=\"wrap_content\"\r\n          android:layout_height=\"wrap_content\"\r\n          android:onClick=\"onDismissClick\"\r\n          android:text=\"@string/dismiss\" />\r\n\r\n      <Button\r\n          android:id=\"@+id/snooze_button\"\r\n          android:layout_width=\"wrap_content\"\r\n          android:layout_height=\"wrap_content\"\r\n          android:layout_alignBottom=\"@+id/dismiss_button\"\r\n          android:layout_toRightOf=\"@+id/dismiss_button\"\r\n          android:onClick=\"onSnoozeClick\"\r\n          android:text=\"@string/snooze\" />\r\n      </RelativeLayout>\r\n</RelativeLayout>\r\n```\r\n再来看一下MainActivity：\r\n```\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n    }\r\n\r\n    //点击Button后执行的函数\r\n    public void onPingClick(View v){\r\n        //拿到输入的值\r\n        EditText edit_seconds=(EditText)findViewById(R.id.edit_seconds);\r\n        String time=edit_seconds.getText().toString();\r\n        EditText edit_reminder=(EditText)findViewById(R.id.edit_reminder);\r\n        String reminderText=edit_reminder.getText().toString();\r\n\r\n        int seconds=(time == null || time.trim().equals(\"\"))?R.string.seconds_default:Integer.parseInt(time);\r\n        int milliseconds = seconds * 1000;\r\n\r\n        //生成一个intent，用来启动Service，在Service中设置通知\r\n        Intent intent=new Intent(this,NotificationService.class);\r\n        intent.putExtra(CommonConstants.EXTRA_MESSAGE,reminderText);\r\n        intent.putExtra(CommonConstants.EXTRA_TIMER, milliseconds);\r\n        intent.setAction(CommonConstants.ACTION_NOTIFICATION);\r\n        startService(intent);\r\n    }\r\n}\r\n```\r\nMainActivity把intent传给NotificationService，具体的通知设置都在这个Service中：\r\n```\r\npublic class NotificationService extends IntentService {\r\n    private NotificationManager mNotificationManager;\r\n    private String mMessage;\r\n    private int mMillis;\r\n    private NotificationCompat.Builder builder;\r\n    \r\n    public NotificationService() {\r\n        super(\"com.example.administrator.notificationdemo\");\r\n    }\r\n\r\n    @Override\r\n    protected void onHandleIntent(Intent intent) {\r\n        //从intent中获取消息内容\r\n        mMessage = intent.getStringExtra(CommonConstants.EXTRA_MESSAGE);\r\n        //从intent中获取时间，默认为CommonConstants.DEFAULT_TIMER_DURATION\r\n        mMillis = intent.getIntExtra(CommonConstants.EXTRA_TIMER, CommonConstants.DEFAULT_TIMER_DURATION);\r\n\r\n        mNotificationManager = (NotificationManager)getSystemService(NOTIFICATION_SERVICE);\r\n\r\n        //Intent可能是从MainActivity或ResultActivity传过来的，\r\n        // MainActivity传过来的Action是ACTION_NOTIFICATION，\r\n        // ResultActivity传过来的Action是ACTION_SNOOZE或ACTION_DISMISS。\r\n        switch (intent.getAction()){\r\n            case CommonConstants.ACTION_NOTIFICATION:   notification(mMillis, mMessage);    break;\r\n            case CommonConstants.ACTION_SNOOZE:   snooze();    break;\r\n            case CommonConstants.ACTION_DISMISS:   dismiss();    break;\r\n        }\r\n    }\r\n\r\n    private void notification(int mMillis,String message){\r\n        //NotificationCompat.Builder给许多各种不同的平台提供notification支持\r\n        //创建Builder对象，\r\n        /*\r\n        一个Builder至少包含以下内容：\r\n            1.一个小的icon，用setSmallIcon())方法设置\r\n            2.一个标题，用setContentTitle())方法设置\r\n            3.详细的文本，用setContentText())方法设置\r\n         */\r\n        builder = new NotificationCompat.Builder(this)\r\n                .setSmallIcon(R.drawable.ic_stat_notification)  //设置了之后没效果，还是显示应用图标？\r\n                .setContentTitle(getString(R.string.notification))\r\n                .setContentText(getString(R.string.set_reminder))\r\n                .setDefaults(Notification.DEFAULT_ALL); // requires VIBRATE permission\r\n\r\n        Intent resultIntent = new Intent(this, ResultActivity.class);\r\n        resultIntent.putExtra(CommonConstants.EXTRA_MESSAGE, message);\r\n        resultIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);\r\n        //通过调用setFlags())方法并设置标识FLAG_ACTIVITY_NEW_TASK 与 FLAG_ACTIVITY_CLEAR_TASK，来设置Activity在一个新的任务中启动\r\n\r\n        //设置点击了通知栏后要做什么事\r\n        // 这里是打开ResultActivity\r\n        PendingIntent resultPendingIntent =\r\n                PendingIntent.getActivity(\r\n                        this,   // Context: The Context in which this PendingIntent should start the activity.\r\n                        0,  //int: Private request code for the sender\r\n                        resultIntent,   //Intent: Intent of the activities to be launched.\r\n                        PendingIntent.FLAG_UPDATE_CURRENT   //int: May be FLAG_ONE_SHOT, FLAG_NO_CREATE, FLAG_CANCEL_CURRENT, FLAG_UPDATE_CURRENT, or any of the flags as supported by Intent.fillIn() to control which unspecified parts of the intent that can be supplied when the actual send happens.\r\n                );\r\n        builder.setContentIntent(resultPendingIntent);\r\n        startTimer(mMillis);\r\n    }\r\n\r\n    private void snooze(){\r\n        if (true){\r\n            //TODO 如何判断通知有没有被cancel\r\n            notification(CommonConstants.DEFAULT_TIMER_DURATION, getString(R.string.done_snoozing));\r\n        }\r\n    }\r\n\r\n    private void dismiss(){\r\n        mNotificationManager.cancel(CommonConstants.NOTIFICATION_ID);\r\n    }\r\n\r\n    private void startTimer(int millis) {\r\n        try {\r\n            Thread.sleep(millis);\r\n\r\n        } catch (InterruptedException e) {\r\n            Log.d(CommonConstants.DEBUG_TAG, getString(R.string.sleep_error));\r\n        }\r\n        // Including the notification ID allows you to update the notification later on.\r\n        //通知消息栏\r\n        mNotificationManager.notify(CommonConstants.NOTIFICATION_ID, builder.build());\r\n    }\r\n\r\n    private void downPicture(){\r\n        //下面的线程展示了如何在Notification中放入ProgressBar\r\n        /*\r\n        Notifications可以包含一个展示用户正在进行的操作状态的动画进度指示器。\r\n        如果你可以在任何时候估算这个操作得花多少时间以及当前已经完成多少，你可以用“determinate（确定的，下同）”形式的指示器（一个进度条）。\r\n        如果你不能估算这个操作的长度，使用“indeterminate（不确定，下同）”形式的指示器（一个活动的指示器）。\r\n\r\n        为了展示一个确定长度的进度条，调用 setProgress(max, progress, false))方法将进度条添加进notification，然后发布这个notification，\r\n        第三个参数是个boolean类型，决定进度条是 indeterminate (true) 还是 determinate (false)。\r\n        */\r\n        new Thread(\r\n                new Runnable() {\r\n                    @Override\r\n                    public void run() {\r\n                        int id = 1;\r\n                        NotificationManager mNotifyManager =\r\n                                (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);\r\n                        NotificationCompat.Builder mBuilder = new NotificationCompat.Builder(getApplicationContext());\r\n                        mBuilder.setContentTitle(\"Picture Download\")\r\n                                .setContentText(\"Download in progress\")\r\n                                .setSmallIcon(R.drawable.ic_stat_notification);\r\n                        int incr;\r\n                        for (incr = 0; incr <= 100;) {\r\n                            try {\r\n                                Thread.sleep(500);  //每0.5秒更新一次ProgressBar\r\n                            } catch (InterruptedException e) {\r\n                                Log.d(\"TAG\", \"sleep failure\");\r\n                            }\r\n                            mBuilder.setProgress(100, incr, false);\r\n                            // Displays the progress bar for the first time.\r\n                            mNotifyManager.notify(id, mBuilder.build());\r\n                            incr+=5;    //实际情况是获取下载的进度\r\n                        }\r\n                        // When the loop is finished, updates the notification\r\n                        mBuilder.setContentText(\"Download complete\")\r\n                                // Removes the progress bar\r\n                                .setProgress(0,0,false);\r\n                        mNotifyManager.notify(id, mBuilder.build());\r\n                    }\r\n                }\r\n        ).start();\r\n    }\r\n}\r\n```\r\n最后，看一下点击通知栏后显示的Activity：\r\n```\r\npublic class ResultActivity extends Activity {\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_result);\r\n\r\n        String message = getIntent().getStringExtra(CommonConstants.EXTRA_MESSAGE);\r\n        TextView text = (TextView) findViewById(R.id.result_message);\r\n        text.setText(message);\r\n    }\r\n    public void onSnoozeClick(View v){\r\n        Intent intent = new Intent(getApplicationContext(), NotificationService.class);\r\n        intent.setAction(CommonConstants.ACTION_SNOOZE);\r\n        startService(intent);\r\n    }\r\n\r\n    public  void onDismissClick(View v){\r\n        Intent intent = new Intent(getApplicationContext(), NotificationService.class);\r\n        intent.setAction(CommonConstants.ACTION_DISMISS);\r\n        startService(intent);\r\n    }\r\n}\r\n```",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}